# For DockerHub, you can use the following GitHub Actions workflow to build and push Docker images for your microservices. This example assumes you have a directory structure where each microservice is in its own subdirectory under `services/`, and you have a Helm chart in `helm/microservices/`.

name: Build & Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_OWNER: your-dockerhub

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Images
        run: |
          for svc in user product order notification; do
            docker build -t $REGISTRY/$IMAGE_OWNER/${svc}-service:latest services/${svc}_service
            docker push $REGISTRY/$IMAGE_OWNER/${svc}-service:latest
          done

      # - name: Setup Helm
      #   uses: azure/setup-helm@v3

      # - name: Set up Kubeconfig
      #   run: echo "$KUBECONFIG_SECRET" > kubeconfig.yaml
      #   env:
      #     KUBECONFIG_SECRET: ${{ secrets.KUBECONFIG_SECRET }}

      # - name: Deploy with Helm
      #   run: |
      #     helm upgrade --install microservices helm/microservices -f helm/microservices/values.yaml --kubeconfig kubeconfig.yaml




# For AWS ECR, you can use the following GitHub Actions workflow to build and push Docker images for your microservices. This example assumes you have a directory structure where each microservice is in its own subdirectory under `services/`, and you have a Helm chart in `helm-charts/microservices/`.

# name: CI/CD Pipeline
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.9'
#       - name: Set ECR_URI Environment Variable
#         run: echo "ECR_URI=your-account-id.dkr.ecr.your-region.amazonaws.com" >> $GITHUB_ENV
#       - name: Build and Test Services
#         run: |
#           for svc in services/*; do
#             if [ -d "$svc" ]; then
#               cd "$svc"
#               docker build -t $ECR_URI/$(basename "$svc"):latest .
#               docker push $ECR_URI/$(basename "$svc"):latest
#               cd -
#             fi
#           done
#       - name: Build Docker Images
#         run: |
#           for svc in services/*; do
#             cd "$svc"
#             docker build -t $ECR_URI/$(basename "$svc"):latest .
#             docker push $ECR_URI/$(basename "$svc"):latest
#             cd -
#           done
#       - name: Deploy Helm Chart
#         run: |
#           helm upgrade --install microservices helm-charts/microservices